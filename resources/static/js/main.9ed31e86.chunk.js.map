{"version":3,"sources":["PyRunner.js","App.js","reportWebVitals.js","index.js"],"names":["PyRunner","options","a","window","Neutralino","filesystem","writeFile","fileName","NL_PATH","data","code","input","command","NL_PYNAME","os","execCommand","readFile","response","App","pyRunner","React","useState","setCode","output","setOutput","setInput","run","className","value","onValueChange","highlight","languages","py","padding","style","fontFamily","height","fontSize","onChange","e","target","onClick","readOnly","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","init"],"mappings":"2SAAaA,EAAb,oFACE,cADF,wDAKE,WAAUC,GAAV,iBAAAC,EAAA,sEACQC,OAAOC,WAAWC,WAAWC,UAAU,CAC3CC,SAAUJ,OAAOK,QAAU,WAC3BC,KAAMR,EAAQS,OAHlB,uBAMQP,OAAOC,WAAWC,WAAWC,UAAU,CAC3CC,SAAUJ,OAAOK,QAAU,aAC3BC,KAAMR,EAAQU,QARlB,cAWMC,EAAUT,OAAOU,UAAY,oCAXnC,SAaQV,OAAOC,WAAWU,GAAGC,YAAY,CACrCH,YAdJ,uBAiBuBT,OAAOC,WAAWC,WAAWW,SAAS,CACzDT,SAAUJ,OAAOK,QAAU,gBAlB/B,cAiBMS,EAjBN,yBAqBSA,EAASR,MArBlB,4CALF,8D,OC8DeS,MArDf,WACE,IAAMC,EAAW,IAAInB,EADR,EAEWoB,IAAMC,SAAN,wDAFX,mBAENX,EAFM,KAEAY,EAFA,OASeF,IAAMC,SAAS,IAT9B,mBASNE,EATM,KASEC,EATF,OAUaJ,IAAMC,SAAS,IAV5B,mBAUNV,EAVM,KAUCc,EAVD,iDAYb,sBAAAvB,EAAA,kEACEsB,EADF,SACkBL,EAASO,IAAI,CAC3Bf,QACAD,SAHJ,8EAZa,sBAkBb,OACE,sBAAKiB,UAAU,SAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,QAAf,kBACA,qBAAKA,UAAU,SAAf,SACA,cAAC,IAAD,CACEC,MAAOlB,EACPmB,cAAe,SAACnB,GAAD,OAAUY,EAAQZ,IACjCoB,UAAW,SAACpB,GAAD,OAAUoB,oBAAUpB,EAAMqB,YAAUC,KAC/CC,QAAS,GACTC,MAAO,CACLC,WAAY,sCACZC,OAAQ,oBACRC,SAAU,WAKhB,sBAAKV,UAAU,kBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,QAAf,mBACA,0BAAUC,MAAOjB,EAAO2B,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOZ,UAC3D,8BACE,sBAAMD,UAAU,UAAUc,QAzCvB,2CAyCH,+BAGJ,sBAAKd,UAAU,oBAAf,UACE,qBAAKA,UAAU,QAAf,oBACA,0BAAUC,MAAOL,EAAQmB,UAAU,cC3C9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BrD,OAAOC,WAAWqD,OAKlBd,M","file":"static/js/main.9ed31e86.chunk.js","sourcesContent":["export class PyRunner {\n  init() {\n\n  }\n\n  async run(options) {\n    await window.Neutralino.filesystem.writeFile({\n      fileName: window.NL_PATH + \"/code.py\",\n      data: options.code\n    });\n\n    await window.Neutralino.filesystem.writeFile({\n      fileName: window.NL_PATH + \"/input.txt\",\n      data: options.input\n    });\n\n    let command = window.NL_PYNAME + \" code.py < input.txt > output.txt\";\n\n    await window.Neutralino.os.execCommand({\n      command\n    });\n\n    let response = await window.Neutralino.filesystem.readFile({\n      fileName: window.NL_PATH + \"/output.txt\"\n    });\n\n    return response.data;\n  }\n}\n","import './App.css';\nimport React from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport \"prismjs/components/prism-clike\";\nimport 'prismjs/components/prism-python';\nimport \"prismjs/themes/prism.css\"\nimport {PyRunner} from \"./PyRunner\";\n\nfunction App() {;\n  const pyRunner = new PyRunner();\n  const [code, setCode] = React.useState(\n    `def main():\n  print(\"Hello World!\")\n\nmain()\n    `\n    );\n  const [output, setOutput] = React.useState(\"\");\n  const [input, setInput] = React.useState(\"\");\n\n  async function runCode() {\n    setOutput(await pyRunner.run({\n      input,\n      code\n    }));\n  }\n  return (\n    <div className=\"litepy\">\n      <div className=\"col code-editor\">\n        <div className=\"title\">Code</div>\n        <div className=\"editor\">\n        <Editor\n          value={code}\n          onValueChange={(code) => setCode(code)}\n          highlight={(code) => highlight(code, languages.py)}\n          padding={10}\n          style={{\n            fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\n            height: \"calc(100% - 26px)\",\n            fontSize: 12,\n          }}\n        />\n        </div>\n      </div>\n      <div className=\"col code-config\">\n        <div className=\"h-col code-input\">\n          <div className=\"title\">Input</div>\n          <textarea value={input} onChange={(e) => setInput(e.target.value)}></textarea>\n          <div>\n            <span className=\"run-btn\" onClick={runCode}>▶️</span>\n          </div>\n        </div>\n        <div className=\"h-col code-output\">\n          <div className=\"title\">Output</div>\n          <textarea value={output} readOnly={true}></textarea>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nwindow.Neutralino.init();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}